---

- name: Create a challenge for the wildcard domain using account key file for {{ acme_domain }}.
  become: true
  community.crypto.acme_certificate:
    account_key_src: "{{ acme_private_account_key_dir }}"
    account_email: "{{ acme_account_email }}"
    src: "{{ acme_csr_dir }}"
    cert: "{{ acme_cert_dir }}"
    challenge: "dns-01"
    acme_directory: "{{ acme_server_dir }}"
    remaining_days: "{{ acme_remaining_days }}"
    acme_version: 2
    terms_agreed: true
  register: acme_dns_challenge_results
  run_once: true

- name: Debug dns_challenge variable for {{ acme_domain }}.
  ansible.builtin.debug:
    var: acme_dns_challenge_results
  run_once: true
  tags: [debug]

- name: Extract dns_challenge TXT value.
  ansible.builtin.set_fact:
    acme_domain_txt_value: "{{ acme_dns_challenge_results.challenge_data[acme_domain]['dns-01'].resource_value }}"
    acme_domain_wildcard_txt_value: "{{ acme_dns_challenge_results.challenge_data[acme_domain_wildcard]['dns-01'].resource_value }}"
  when:
    - acme_dns_challenge_results.challenge_data is defined
  run_once: true

- name: Debug out the challenge value.
  ansible.builtin.debug:
    msg:
      - "acme_domain_txt_value: {{ acme_domain_txt_value }}"
      - "acme_domain_wildcard_txt_value: {{ acme_domain_wildcard_txt_value }}"
  when:
    - acme_dns_challenge_results.challenge_data is defined
  run_once: true
